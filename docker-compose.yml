services:
  db:
    image: postgres:16.4
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}      
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db-init:/docker-entrypoint-initdb.d
    networks:
      - internal

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - '8080:80'
    environment: 
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
     - pgadmin-data:/var/lib/pgadmin
    networks:
     - internal
  
  frontend:
    image: 'ghcr.io/${OWNER}/pr_frontend:frn'
    build: 
      context: frontend
    environment:
      VITE_BASE_URL: /
      VITE_API_URL: /api/afisha
      VITE_CDN_URL: /content/afisha
    volumes:
     - frontend_build:/app/dist    

  backend:
    image: 'ghcr.io/${OWNER}/pr_backend:frn'
    build: 
      context: backend
    environment:
      PORT: ${DATABASE_PORT}
      DATABASE_DRIVER: ${DATABASE_DRIVER}
      DATABASE_URL: "postgres://db:5432/${DATABASE_NAME}"
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - 3000:3000
    networks:
    - internal
    depends_on:
      - db 

  server:
    image: 'ghcr.io/${OWNER}/pr_server:frn'
    build: 
      context: nginx
    ports:
     - 80:80
    volumes:
     - frontend_build:/var/www
    depends_on:
     - frontend
     - backend
    networks:
    - internal

volumes:
  postgres_data:
  pgadmin-data:
  frontend_build:

networks:
  internal:
    driver: bridge